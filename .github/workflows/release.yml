name: Release with Signing and Changelog
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # This ensures we get the full history for changelog generation
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React app
        run: npm run react-build
        env:
          CI: false
          
      - name: Build and Sign Windows App
        run: npm run electron-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate Changelog
        id: changelog
        run: |
          # Extract the version from the tag
          $VERSION=${env:GITHUB_REF_NAME} -replace '^v',''
          Write-Host "Extracting changelog for version: $VERSION"
          
          # Read CHANGELOG.md
          $CHANGELOG = Get-Content -Path CHANGELOG.md -Raw
          
          # Create a more specific regex pattern to match your changelog format
          $PATTERN = "(?ms)## \[$VERSION\].*?(?=\r?\n## \[|\r?\n\[Unreleased\]|$)"
          
          if ($CHANGELOG -match $PATTERN) {
            $CHANGELOG_SECTION = $Matches[0].Trim()
            Write-Host "Found changelog entry:"
            Write-Host "--------------------"
            Write-Host $CHANGELOG_SECTION
            Write-Host "--------------------"
            
            # Save to file for the release
            $CHANGELOG_SECTION | Out-File -FilePath changelog_section.txt -Encoding utf8
            echo "changelog_file=changelog_section.txt" >> $env:GITHUB_OUTPUT
            echo "changelog_found=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "No changelog entry found for version $VERSION"
            echo "changelog_found=false" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/*.exe"
          draft: false
          prerelease: false
          body_path: ${{ steps.changelog.outputs.changelog_found == 'true' && steps.changelog.outputs.changelog_file || '' }}
          generate_release_notes: ${{ steps.changelog.outputs.changelog_found != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}